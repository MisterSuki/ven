name: Release Browser Extension
on:
    push:
        tags:
            - v*

jobs:
    Publish:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                browser:
                    - firefox
                    - chrome

        steps:
            - uses: actions/checkout@v3

            - name: check that tag matches package.json version
              run: |
                pkg_version="$(jq -r .version < package.json)"
                if [[ "${{ github.ref_name }}" != "$pkg_version" ]]; then
                    echo "Tag ${{ github.ref_name }} does not match package.json version $pkg_version" >&2
                    exit 1
                fi

            - uses: pnpm/action-setup@v2 # Install pnpm using packageManager key in package.json

            - name: Use Node.js 19
              uses: actions/setup-node@v3
              with:
                  node-version: 19
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build web
              run: pnpm buildWeb --standalone

            - name: Publish extension
              run: |
                # TODO make this real
                cd dist/extension-unpacked

                EXIT_CODE=0
                # Chrome Store - TODO actually sign up for chrome publishing
                # Do not fail so that even if chrome fails, firefox gets a shot. But also store exit code to fail workflow later
                # pnpx chrome-webstore-upload-cli@2.1.0 upload --auto-publish || EXIT_CODE=$?

                # Firefox
                pnpx web-ext-submit@7.4.0

                exit $EXIT_CODE
              env:
                EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
                CLIENT_ID: ${{ secrets.CLIENT_ID }}
                CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
                REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
                WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
                WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}

